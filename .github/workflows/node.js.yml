name: Node.js CI

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    # Containers must run in Linux based operating systems
    container:
      image: node:18-alpine
      options: --user root
    services:
      redis:
        image: redis
      chrome:
        image: browserless/chrome

    strategy:
      matrix:
        node-version: [ 18.x ]

    env:
      REDIS_HOST: redis
      CHROME_HOST: chrome

    steps:
      - run: apk add --update build-base pkgconfig python3 cairo-dev librsvg-dev pango-dev pixman-dev
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn global add typescript
      - run: tsc
      - run: yarn test
      - name: QuantumOracle Adapter Build
        id: qo-adapter-dist
        uses: actions/upload-artifact@v3
        with:
          name: qo-adapter-dist-${{ github.run_id }}
          path: ./dist
  docker:
    needs: build
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            chainhackers/quantumoracle-adapter
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: chainhackers/quantumoracle-adapter:latest
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Restart Adapter container
        run: ssh ${{ secrets.USER }}@${{ secrets.HOST }} "/home/quantum-oracle/reload_adapter.sh ${{ steps.meta.outputs.version }}"
